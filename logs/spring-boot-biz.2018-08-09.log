[2018-08-09 10:39:53] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 1403 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 10:39:53] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 10:39:59] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 8.012 seconds (JVM running for 9.727)
[2018-08-09 10:40:35] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 1418 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 10:40:35] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 10:40:39] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 5.65 seconds (JVM running for 6.482)
[2018-08-09 10:50:42] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 3746 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 10:50:42] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 10:50:47] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 5.088 seconds (JVM running for 5.77)
[2018-08-09 10:59:21] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 4245 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 10:59:21] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 10:59:26] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 5.456 seconds (JVM running for 6.297)
[2018-08-09 15:25:10] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 7392 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 15:25:10] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 15:25:16] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.393 seconds (JVM running for 7.171)
[2018-08-09 16:33:09] INFO  com.example.springboot.KafkaTest - Starting KafkaTest on jianglingjundeMacBook-Pro.local with PID 9129 (started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 16:33:09] INFO  com.example.springboot.KafkaTest - The following profiles are active: test
[2018-08-09 16:33:17] INFO  com.example.springboot.KafkaTest - Started KafkaTest in 8.848 seconds (JVM running for 10.991)
[2018-08-09 16:39:39] INFO  com.example.springboot.KafkaTest - Starting KafkaTest on jianglingjundeMacBook-Pro.local with PID 9204 (started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 16:39:39] INFO  com.example.springboot.KafkaTest - The following profiles are active: test
[2018-08-09 16:39:44] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:39:44] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:39:44] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:39:44] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:39:48] INFO  com.example.springboot.KafkaTest - Started KafkaTest in 9.894 seconds (JVM running for 11.718)
[2018-08-09 16:39:48] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:41:45] INFO  com.example.springboot.KafkaTest - Starting KafkaTest on jianglingjundeMacBook-Pro.local with PID 9223 (started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 16:41:45] INFO  com.example.springboot.KafkaTest - The following profiles are active: test
[2018-08-09 16:41:50] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:41:50] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:41:50] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:41:50] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:41:54] INFO  com.example.springboot.KafkaTest - Started KafkaTest in 9.602 seconds (JVM running for 12.584)
[2018-08-09 16:41:54] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:51:47] INFO  com.example.springboot.KafkaTest - Starting KafkaTest on jianglingjundeMacBook-Pro.local with PID 9297 (started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 16:51:47] INFO  com.example.springboot.KafkaTest - The following profiles are active: test
[2018-08-09 16:51:51] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:51:51] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:51:51] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:51:51] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:51:55] INFO  com.example.springboot.KafkaTest - Started KafkaTest in 9.069 seconds (JVM running for 11.057)
[2018-08-09 16:51:55] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:54:11] INFO  com.example.springboot.KafkaTest - Starting KafkaTest on jianglingjundeMacBook-Pro.local with PID 9304 (started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 16:54:11] INFO  com.example.springboot.KafkaTest - The following profiles are active: test
[2018-08-09 16:54:15] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:54:15] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:54:15] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:54:15] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 16:54:19] INFO  com.example.springboot.KafkaTest - Started KafkaTest in 8.45 seconds (JVM running for 11.102)
[2018-08-09 16:54:19] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service！！！
[2018-08-09 17:28:45] INFO  com.example.springboot.KafkaTest - Starting KafkaTest on jianglingjundeMacBook-Pro.local with PID 9535 (started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 17:28:45] INFO  com.example.springboot.KafkaTest - The following profiles are active: test
[2018-08-09 17:28:48] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service ！！！com.example.springboot.service.factory.test.TestAServiceProcessor
[2018-08-09 17:28:48] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service ！！！com.example.springboot.service.factory.test.TestBServiceProcessor
[2018-08-09 17:28:48] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service ！！！com.example.springboot.service.factory.city.CityAServiceProcessorImpl
[2018-08-09 17:28:48] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service ！！！com.example.springboot.service.factory.city.CityBServiceProcessorImpl
[2018-08-09 17:28:52] INFO  com.example.springboot.KafkaTest - Started KafkaTest in 7.787 seconds (JVM running for 9.557)
[2018-08-09 17:28:52] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service ！！！com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl
[2018-08-09 17:30:09] INFO  com.example.springboot.KafkaTest - Starting KafkaTest on jianglingjundeMacBook-Pro.local with PID 9549 (started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 17:30:09] INFO  com.example.springboot.KafkaTest - The following profiles are active: test
[2018-08-09 17:30:12] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service ！！！com.example.springboot.service.factory.test.TestAServiceProcessor.getTag
[2018-08-09 17:30:12] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service ！！！com.example.springboot.service.factory.test.TestBServiceProcessor.getTag
[2018-08-09 17:30:12] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service ！！！com.example.springboot.service.factory.city.CityAServiceProcessorImpl.getTag
[2018-08-09 17:30:12] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service ！！！com.example.springboot.service.factory.city.CityBServiceProcessorImpl.getTag
[2018-08-09 17:30:16] INFO  com.example.springboot.KafkaTest - Started KafkaTest in 8.442 seconds (JVM running for 10.246)
[2018-08-09 17:30:17] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行service ！！！com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl.sendMessage
[2018-08-09 17:32:02] INFO  com.example.springboot.KafkaTest - Starting KafkaTest on jianglingjundeMacBook-Pro.local with PID 9553 (started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 17:32:02] INFO  com.example.springboot.KafkaTest - The following profiles are active: test
[2018-08-09 17:32:05] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 17:32:05] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 17:32:05] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 17:32:05] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 17:32:09] INFO  com.example.springboot.KafkaTest - Started KafkaTest in 7.616 seconds (JVM running for 9.343)
[2018-08-09 17:32:09] INFO  com.example.springboot.base.aop.ServiceAop - 准备执行: com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl 的 sendMessage方法
[2018-08-09 17:46:20] INFO  com.example.springboot.KafkaTest - Starting KafkaTest on jianglingjundeMacBook-Pro.local with PID 9660 (started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 17:46:20] INFO  com.example.springboot.KafkaTest - The following profiles are active: test
[2018-08-09 17:46:25] INFO  com.example.springboot.base.aop.ServiceAop - @Before准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 17:46:25] INFO  com.example.springboot.base.aop.ServiceAop - @Before准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 17:46:25] INFO  com.example.springboot.base.aop.ServiceAop - @Before准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 17:46:25] INFO  com.example.springboot.base.aop.ServiceAop - @Before准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 17:46:29] INFO  com.example.springboot.KafkaTest - Started KafkaTest in 9.435 seconds (JVM running for 11.466)
[2018-08-09 17:46:29] INFO  com.example.springboot.base.aop.ServiceAop - @Before准备执行: com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl 的 sendMessage方法
[2018-08-09 17:51:44] INFO  com.example.springboot.KafkaTest - Starting KafkaTest on jianglingjundeMacBook-Pro.local with PID 9690 (started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 17:51:44] INFO  com.example.springboot.KafkaTest - The following profiles are active: test
[2018-08-09 17:51:48] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 17:51:48] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 17:51:48] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 17:51:48] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 17:51:52] INFO  com.example.springboot.KafkaTest - Started KafkaTest in 8.623 seconds (JVM running for 10.626)
[2018-08-09 17:51:52] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl 的 sendMessage方法
[2018-08-09 17:52:23] INFO  com.example.springboot.KafkaTest - Starting KafkaTest on jianglingjundeMacBook-Pro.local with PID 9701 (started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 17:52:23] INFO  com.example.springboot.KafkaTest - The following profiles are active: test
[2018-08-09 17:52:27] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 17:52:27] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 17:52:27] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 17:52:27] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 17:52:32] INFO  com.example.springboot.KafkaTest - Started KafkaTest in 9.182 seconds (JVM running for 11.462)
[2018-08-09 17:52:32] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl 的 sendMessage方法
[2018-08-09 17:55:29] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9716 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 17:55:29] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 17:55:32] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 17:55:32] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 17:55:33] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 17:55:33] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 17:55:35] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.378 seconds (JVM running for 7.931)
[2018-08-09 17:55:36] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl 的 sendMessage方法
[2018-08-09 17:55:37] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/favicon.ico, executeTime = 10ms,paramMap ={},headerMap={"referer":"http://localhost:8081/send","accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","connection":"keep-alive","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"image/webp,image/apng,image/*,*/*;q\u003d0.8"}
[2018-08-09 17:55:53] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl 的 sendMessage方法
[2018-08-09 17:55:53] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E5%A4%A9%E6%B0%94%E7%9C%9F%E5%A5%BD%EF%BC%8C%E8%A6%81%E4%B8%8B%E9%9B%A8%E4%BA%86&topic=test, executeTime = 465ms,paramMap ={"message":["今天天气真好，要下雨了"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:00:29] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9750 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:00:29] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:00:33] INFO  com.example.springboot.base.aop.ServiceAop - @Around: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:01:10] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9753 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:01:10] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:01:14] INFO  com.example.springboot.base.aop.ServiceAop - @Around: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:01:41] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9757 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:01:41] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:01:44] INFO  com.example.springboot.base.aop.ServiceAop - Around
[2018-08-09 18:02:06] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9761 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:02:06] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:02:09] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:02:09] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 18:02:09] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 18:02:09] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 18:02:12] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.265 seconds (JVM running for 7.17)
[2018-08-09 18:02:15] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl 的 sendMessage方法
[2018-08-09 18:02:15] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E5%A4%A9%E6%B0%94%E7%9C%9F%E5%A5%BD%EF%BC%8C%E8%A6%81%E4%B8%8B%E9%9B%A8%E4%BA%86&topic=test, executeTime = 594ms,paramMap ={"message":["今天天气真好，要下雨了"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:02:58] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl 的 sendMessage方法
[2018-08-09 18:02:58] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E5%A4%A9%E6%B0%94%E7%9C%9F%E5%A5%BD%EF%BC%8C%E8%A6%81%E4%B8%8B%E9%9B%A8%E4%BA%86&topic=test, executeTime = 1ms,paramMap ={"message":["今天天气真好，要下雨了"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:05:03] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9786 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:05:03] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:05:07] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:05:07] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 18:05:07] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 18:05:07] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 18:05:09] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.916 seconds (JVM running for 8.666)
[2018-08-09 18:05:10] INFO  com.example.springboot.base.aop.ServiceAop - Around
[2018-08-09 18:05:10] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E5%A4%A9%E6%B0%94%E7%9C%9F%E5%A5%BD%EF%BC%8C%E8%A6%81%E4%B8%8B%E9%9B%A8%E4%BA%86&topic=test, executeTime = 56ms,paramMap ={"message":["今天天气真好，要下雨了"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:05:19] INFO  com.example.springboot.base.aop.ServiceAop - Around
[2018-08-09 18:05:19] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E5%A4%A9%E6%B0%94%E7%9C%9F%E5%A5%BD%EF%BC%8C%E8%A6%81%E4%B8%8B%E9%9B%A8%E4%BA%86&topic=test, executeTime = 2ms,paramMap ={"message":["今天天气真好，要下雨了"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:05:50] INFO  com.example.springboot.base.aop.ServiceAop - Around
[2018-08-09 18:05:50] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E5%A4%A9%E6%B0%94%E7%9C%9F%E5%A5%BD%EF%BC%8C%E8%A6%81%E4%B8%8B%E9%9B%A8%E4%BA%86&topic=test, executeTime = 3398ms,paramMap ={"message":["今天天气真好，要下雨了"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:06:06] INFO  com.example.springboot.base.aop.ServiceAop - Around
[2018-08-09 18:06:06] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E5%A4%A9%E6%B0%94%E7%9C%9F%E5%A5%BD%EF%BC%8C%E8%A6%81%E4%B8%8B%E9%9B%A8%E4%BA%86&topic=test, executeTime = 3610ms,paramMap ={"message":["今天天气真好，要下雨了"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:06:42] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9802 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:06:42] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:06:45] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:06:45] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 18:06:45] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 18:06:45] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 18:06:48] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.388 seconds (JVM running for 7.772)
[2018-08-09 18:07:04] INFO  com.example.springboot.base.aop.ServiceAop - Around
[2018-08-09 18:07:04] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E6%98%9F%E6%9C%9F%E5%9B%9B%EF%BC%8C%E6%AD%A3%E5%9C%A8%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%B5%8B%E8%AF%95kafka&topic=test, executeTime = 45ms,paramMap ={"message":["今天星期四，正在工作，测试kafka"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:07:10] INFO  com.example.springboot.base.aop.ServiceAop - Around
[2018-08-09 18:07:10] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E6%98%9F%E6%9C%9F%E5%9B%9B%EF%BC%8C%E6%AD%A3%E5%9C%A8%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%B5%8B%E8%AF%95kafka&topic=test, executeTime = 1ms,paramMap ={"message":["今天星期四，正在工作，测试kafka"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:07:20] INFO  com.example.springboot.base.aop.ServiceAop - Around
[2018-08-09 18:07:20] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E6%98%9F%E6%9C%9F%E5%9B%9B%EF%BC%8C%E6%AD%A3%E5%9C%A8%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%B5%8B%E8%AF%95kafka&topic=test, executeTime = 2ms,paramMap ={"message":["今天星期四，正在工作，测试kafka"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:07:22] INFO  com.example.springboot.base.aop.ServiceAop - Around
[2018-08-09 18:07:22] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E6%98%9F%E6%9C%9F%E5%9B%9B%EF%BC%8C%E6%AD%A3%E5%9C%A8%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%B5%8B%E8%AF%95kafka&topic=test, executeTime = 1ms,paramMap ={"message":["今天星期四，正在工作，测试kafka"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:08:03] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9808 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:08:03] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:08:06] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:08:06] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 18:08:06] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 18:08:06] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 18:08:08] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 5.437 seconds (JVM running for 6.147)
[2018-08-09 18:08:13] INFO  com.example.springboot.base.aop.ServiceAop - Around
[2018-08-09 18:08:13] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E6%98%9F%E6%9C%9F%E5%9B%9B%EF%BC%8C%E6%AD%A3%E5%9C%A8%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%B5%8B%E8%AF%95kafka&topic=test, executeTime = 47ms,paramMap ={"message":["今天星期四，正在工作，测试kafka"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:09:07] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9825 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:09:07] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:09:11] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:09:11] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 18:09:11] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 18:09:11] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 18:09:13] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.64 seconds (JVM running for 7.77)
[2018-08-09 18:09:45] INFO  com.example.springboot.base.aop.ServiceAop - Around
[2018-08-09 18:09:45] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E6%98%9F%E6%9C%9F%E5%9B%9B%EF%BC%8C%E6%AD%A3%E5%9C%A8%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%B5%8B%E8%AF%95kafka&topic=test, executeTime = 39ms,paramMap ={"message":["今天星期四，正在工作，测试kafka"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 18:11:16] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9839 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:11:16] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:11:19] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:11:19] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 18:11:19] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 18:11:19] INFO  com.example.springboot.base.aop.ServiceAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 18:11:21] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.61 seconds (JVM running for 7.478)
[2018-08-09 18:13:10] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9856 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:13:10] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:13:15] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:13:15] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 18:13:15] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 18:13:15] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 18:13:19] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 9.935 seconds (JVM running for 11.646)
[2018-08-09 18:15:23] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 9889 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:15:23] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:15:26] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:15:26] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 18:15:26] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 18:15:26] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 18:15:28] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.444 seconds (JVM running for 7.348)
[2018-08-09 18:15:34] ERROR com.example.springboot.utils.thread.threadpool.FastThreadPool - thread pool process future task failed:
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
### The error may involve com.example.springboot.persist.kafkaMessage.KafkaMessageMapper.insertKafkaMessage-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO  kafka_message (topic,messageBody,messageByte,version,status)         VALUE (?,?,?,?,0)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
; ]; Column 'version' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy91.insertKafkaMessage(Unknown Source)
	at com.example.springboot.base.aop.KafkaMessageAroundAop.lambda$Around$0(KafkaMessageAroundAop.java:93)
	at com.example.springboot.utils.thread.threadpool.FastThreadPool.lambda$execute$0(FastThreadPool.java:127)
	at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)
	at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)
	at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:77)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:115)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:95)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:960)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:388)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:619)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:168)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:494)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy122.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 13 common frames omitted
[2018-08-09 18:15:34] ERROR com.example.springboot.utils.thread.threadpool.FastThreadPool - thread pool get result exception:
java.util.concurrent.ExecutionException: java.lang.RuntimeException: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
### The error may involve com.example.springboot.persist.kafkaMessage.KafkaMessageMapper.insertKafkaMessage-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO  kafka_message (topic,messageBody,messageByte,version,status)         VALUE (?,?,?,?,0)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
; ]; Column 'version' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
	at com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:476)
	at com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:380)
	at com.google.common.util.concurrent.AbstractFuture$TrustedFuture.get(AbstractFuture.java:84)
	at com.example.springboot.utils.thread.threadpool.FastThreadPool.execute(FastThreadPool.java:154)
	at com.example.springboot.utils.thread.threadpool.FastThreadPool.execute(FastThreadPool.java:104)
	at com.example.springboot.base.aop.KafkaMessageAroundAop.Around(KafkaMessageAroundAop.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl$$EnhancerBySpringCGLIB$$3f474d8a.sendMessage(<generated>)
	at com.example.springboot.controller.SampleController.sendMessage(SampleController.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.example.springboot.filters.ExecuteTimeFilter.doFilter(ExecuteTimeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.example.springboot.filters.CORSFilter.doFilter(CORSFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.example.springboot.filters.CORSFilter.doFilter(CORSFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.RuntimeException: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
### The error may involve com.example.springboot.persist.kafkaMessage.KafkaMessageMapper.insertKafkaMessage-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO  kafka_message (topic,messageBody,messageByte,version,status)         VALUE (?,?,?,?,0)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
; ]; Column 'version' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
	at com.example.springboot.utils.thread.threadpool.FastThreadPool.lambda$execute$0(FastThreadPool.java:135)
	at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)
	at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)
	at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:77)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	... 1 common frames omitted
Caused by: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
### The error may involve com.example.springboot.persist.kafkaMessage.KafkaMessageMapper.insertKafkaMessage-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO  kafka_message (topic,messageBody,messageByte,version,status)         VALUE (?,?,?,?,0)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
; ]; Column 'version' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy91.insertKafkaMessage(Unknown Source)
	at com.example.springboot.base.aop.KafkaMessageAroundAop.lambda$Around$0(KafkaMessageAroundAop.java:93)
	at com.example.springboot.utils.thread.threadpool.FastThreadPool.lambda$execute$0(FastThreadPool.java:127)
	... 6 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'version' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:115)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:95)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:960)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:388)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:619)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:168)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:494)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy122.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 13 common frames omitted
[2018-08-09 18:15:34] ERROR com.example.springboot.utils.thread.threadpool.FastThreadPool - thread pool cancel task failed!
[2018-08-09 18:39:10] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 10008 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:39:10] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:39:13] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:39:13] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 18:39:13] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 18:39:13] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 18:39:15] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.727 seconds (JVM running for 7.678)
[2018-08-09 18:46:45] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 10076 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 18:46:45] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 18:46:49] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 18:46:49] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 18:46:49] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 18:46:49] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 18:46:53] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 9.676 seconds (JVM running for 11.157)
[2018-08-09 19:13:06] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 10192 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 19:13:06] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 19:13:10] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 19:13:10] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 19:13:10] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 19:13:10] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 19:13:13] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 7.905 seconds (JVM running for 9.16)
[2018-08-09 19:15:24] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 10203 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 19:15:24] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 19:15:27] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 19:15:27] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 19:15:27] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 19:15:27] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 19:15:30] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.934 seconds (JVM running for 7.85)
[2018-08-09 19:19:06] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 10236 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 19:19:06] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 19:19:09] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 19:19:09] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 19:19:09] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 19:19:09] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 19:19:12] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.166 seconds (JVM running for 7.257)
[2018-08-09 19:21:19] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 10256 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 19:21:19] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 19:21:23] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 19:21:23] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 19:21:23] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 19:21:23] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 19:21:25] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.915 seconds (JVM running for 7.867)
[2018-08-09 19:21:29] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl 的 sendMessage方法
[2018-08-09 19:21:30] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E6%98%9F%E6%9C%9F%E5%9B%9B%EF%BC%8C%E6%AD%A3%E5%9C%A8%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%B5%8B%E8%AF%95kafka&topic=test, executeTime = 2154ms,paramMap ={"message":["今天星期四，正在工作，测试kafka"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 19:24:47] INFO  com.example.springboot.ApplicationStartup - Starting ApplicationStartup on jianglingjundeMacBook-Pro.local with PID 10312 (/Users/jianglingjun/Document/Projects/JavaProjects/springboot/target/classes started by jianglingjun in /Users/jianglingjun/Document/Projects/JavaProjects/springboot)
[2018-08-09 19:24:47] INFO  com.example.springboot.ApplicationStartup - The following profiles are active: test
[2018-08-09 19:24:50] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestAServiceProcessor 的 getTag方法
[2018-08-09 19:24:50] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.test.TestBServiceProcessor 的 getTag方法
[2018-08-09 19:24:50] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityAServiceProcessorImpl 的 getTag方法
[2018-08-09 19:24:50] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.factory.city.CityBServiceProcessorImpl 的 getTag方法
[2018-08-09 19:24:53] INFO  com.example.springboot.ApplicationStartup - Started ApplicationStartup in 6.525 seconds (JVM running for 7.77)
[2018-08-09 19:25:12] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl 的 sendMessage方法
[2018-08-09 19:25:13] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E6%98%9F%E6%9C%9F%E5%9B%9B%EF%BC%8C%E6%AD%A3%E5%9C%A8%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%B5%8B%E8%AF%95kafka&topic=test, executeTime = 3664ms,paramMap ={"message":["今天星期四，正在工作，测试kafka"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","cache-control":"max-age\u003d0","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
[2018-08-09 19:25:37] INFO  com.example.springboot.base.aop.KafkaMessageAroundAop - @Before 准备执行: com.example.springboot.service.kafka.impl.KafkaMessageServiceImpl 的 sendMessage方法
[2018-08-09 19:25:37] INFO  com.example.springboot.filters.ExecuteTimeFilter - request uri =/send?message=%E4%BB%8A%E5%A4%A9%E6%98%9F%E6%9C%9F%E5%9B%9B%EF%BC%8C%E6%AD%A3%E5%9C%A8%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%B5%8B%E8%AF%95kafk%EF%BC%8C%E5%BF%AB%E8%A6%81%E4%B8%8B%E7%8F%AD%E4%BA%86a&topic=test, executeTime = 126ms,paramMap ={"message":["今天星期四，正在工作，测试kafk，快要下班了a"],"topic":["test"]},headerMap={"accept-language":"zh-CN,zh;q\u003d0.9","cookie":"_ga\u003dGA1.1.1588482597.1504075410; Pycharm-a9562a04\u003d8ebc590b-0f17-4932-8d4c-5675a6c1c16d; Idea-46d43588\u003d6d76dc82-dd94-44d4-b9a5-fe0e6560dbfd; Hm_lvt_9277f2eb3b52fade687b154751182245\u003d1533020593","host":"localhost:8081","upgrade-insecure-requests":"1","connection":"keep-alive","accept-encoding":"gzip, deflate, br","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q\u003d0.9,image/webp,image/apng,*/*;q\u003d0.8"}
